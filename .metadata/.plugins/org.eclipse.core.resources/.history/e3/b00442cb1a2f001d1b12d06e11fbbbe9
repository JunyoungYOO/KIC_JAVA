package chap11;

public class StringEx3 {

	public static void main(String[] args) {
		String s = new String("ABCDEFGH");
		// s.charAt(4) : s문자열에서 4번인덱스에 해당하는 문자 한개리
		System.out.println("s.charAt(4)" + s.charAt(4));
		//s.caompareTo("abc") 정렬에서 사용되는 메서드
		//			결과 음수 : s 문자열이 ABC문자열보다 앞쪽
		//			결과 양수 : s 문자열이 AAA 문자열보다 뒤쪽
		System.out.println("s.compareTo('abc'):"+s.compareTo("abc"));
		System.out.println("s.compareTo('AAA'):"+ s.compareTo("AAA"));
		//s.compareToIgnoreCase("abc") : 대소문자 구문없이 정렬에 사용됨.
		System.out.println("s.compareToIgnoreCase('abc'):"+s.compareToIgnoreCase("abc"));
		//s.endsWith("GH") : s 문자열의 끝이 GH? 여부
		System.out.println("s.endsWith('GH'):"+s.endsWith("GH"));
		//S.startsWith('ab')
		System.out.println("s.startsWith('AB'):"+s.startsWith("AB"));
		// s.equals("ABCDEFGH") : s 문자열이 "ABCDEFGH" 문자열과 같은지 여부
		System.out.println("s.equals('ABCDEFGH'):"+s.equals("ABCDEFGH"));
		// s.equalsIgnoreCase("ABCDEFGH") : s 문자열이 대소문자 상관없이
		//								"abcdefgh" 문자열과 같은지 여부
		System.out.println("s.equalsIgnoreCase('abcdefgh'):"+s.equalsIgnoreCase("abcdefgh"));	//true
		
		s="This is a String";
		// s.indexOf('i') : i 문자의 위치(인덱스) 리턴
		System.out.println("s.indexOf('i'):"+ s.indexOf('i'));//2
		// s.indexOf('i',3) : 3번인덱스부터 i 문자의 위치(인덱스) 리턴
		System.out.println("s.indexOf('i',3):"+s.indexOf('i',3));//5
		// 해당 문자가 없는 경우 -1리턴
		System.out.println("s.indexof('Q'):"+s.indexOf('Q'));
		//s.lastIndexOf('i') : 뒤쪽에서 i 문자의 위치.
		//						리턴 인덱스값은 앞부터 시작
		System.out.println("s.lastIndexOf('i'):"+s.lastIndexOf('i'));
		// s.length() : 문자열의 길이 리턴
		System.out.println("s.length():"+s.length());
		//s.replace("is","QR") : 문자열 치환
		System.out.println("s.replace('is','QR') : "+ s.replace("is", "QR"));
		System.out.println("s.replace('is',''):"+s.replace("is",""));
		//substring:부분문자열
		System.out.println("s.substring(5,13):"+s.substring(5,13));
	}

}
